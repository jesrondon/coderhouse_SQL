use venettelecom;

------ triger para PRIMARY cuando se inserte un registro o se haga un  update se actulie el campo de fecha_modificacion en la tabla: customer_plan ------
----  Trigger para INSERT ----


DELIMITER //

CREATE TRIGGER actualizar_fecha_modificacion_insert
AFTER INSERT ON customer
FOR EACH ROW
BEGIN
    IF EXISTS (
        SELECT 1 FROM customer_plan WHERE ID_Cliente = NEW.ID_Cliente
    ) THEN
        UPDATE customer_plan
        SET Fecha_Modificacion = NOW()
        WHERE ID_Cliente = NEW.ID_Cliente;
    END IF;
END;
//

DELIMITER //

CREATE TRIGGER actualizar_fecha_modificacion_update
AFTER UPDATE ON customer
FOR EACH ROW
BEGIN
    IF EXISTS (
        SELECT 1 FROM customer_plan WHERE ID_Cliente = NEW.ID_Cliente
    ) THEN
        UPDATE customer_plan
        SET Fecha_Modificacion = NOW()
        WHERE ID_Cliente = NEW.ID_Cliente;
    END IF;
END;
//

DELIMITER ;




------- Trigger para UPDATE -----

CREATE TRIGGER trg_customer_insert
AFTER INSERT ON customer
FOR EACH ROW
BEGIN
    INSERT INTO log_customer_activity (
        Tipo_Accion, Fecha, Usuario, ID_Cliente, Nombre, Apellido, DNI, Correo, Telefono, Detalle
    )
    VALUES (
        'INSERT',
        NOW(),
        CURRENT_USER(),
        NEW.ID_Cliente,
        NEW.Nombre,
        NEW.Apellido,
        NEW.DNI,
        NEW.Correo,
        NEW.Telefono,
        'Nuevo cliente registrado'
    );
END;


------- Trigger para insert ----

DELIMITER //

CREATE TRIGGER trg_customer_insert
AFTER INSERT ON customer
FOR EACH ROW
BEGIN
    INSERT INTO log_customer_activity (
        Tipo_Accion, Fecha, Usuario, ID_Cliente, Nombre, Apellido, DNI, Correo, Telefono, Detalle
    )
    VALUES (
        'INSERT',
        NOW(),
        CURRENT_USER(),
        NEW.ID_Cliente,
        NEW.Nombre,
        NEW.Apellido,
        NEW.DNI,
        NEW.Correo,
        NEW.Telefono,
        'Nuevo cliente registrado'
    );
END;
//

DELIMITER ;



------- Trigger para DELETE ----
DELIMITER //

CREATE TRIGGER trg_customer_delete
AFTER DELETE ON customer
FOR EACH ROW
BEGIN
    INSERT INTO log_customer_activity (
        Tipo_Accion, Fecha, Usuario, ID_Cliente, Nombre, Apellido, DNI, Correo, Telefono, Detalle
    )
    VALUES (
        'DELETE',
        NOW(),
        CURRENT_USER(),
        OLD.ID_Cliente,
        OLD.Nombre,
        OLD.Apellido,
        OLD.DNI,
        OLD.Correo,
        OLD.Telefono,
        'Registro eliminado'
    );
END;
//

DELIMITER ;




----- creacion de los Triggers para la tabla customer ------ 

DELIMITER //

CREATE TRIGGER validar_customer_insert
BEFORE INSERT ON customer
FOR EACH ROW
BEGIN
    CALL validar_region_estado(NEW.ID_Estado, NEW.ID_Region);
END;
//

CREATE TRIGGER validar_customer_update
BEFORE UPDATE ON customer
FOR EACH ROW
BEGIN
    CALL validar_region_estado(NEW.ID_Estado, NEW.ID_Region);
END;
//

CREATE TRIGGER validar_customer_delete
BEFORE DELETE ON customer
FOR EACH ROW
BEGIN
    IF OLD.VIP_CODE IS NOT NULL AND OLD.VIP_CODE > 0 THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Error: No se puede eliminar un cliente VIP.';
    END IF;
END;
//

DELIMITER ;

----- creacion de los Triggers para la tabla atencion_agente ------ 

DELIMITER //

CREATE TRIGGER validar_agente_region_insert
BEFORE INSERT ON atencion_agente
FOR EACH ROW
BEGIN
    CALL validar_region_estado(NEW.ID_Estado, NEW.ID_Region);
END;
//

CREATE TRIGGER validar_agente_region_update
BEFORE UPDATE ON atencion_agente
FOR EACH ROW
BEGIN
    CALL validar_region_estado(NEW.ID_Estado, NEW.ID_Region);
END;
//

DELIMITER ;
